name: CI

on:
  pull_request:
  push:
    branches: [ main ]

permissions:
  contents: read

concurrency:
  group: ci-${{ github.ref }}
  cancel-in-progress: true

jobs:
  lint:
    name: Ruff (format & lint)
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-python@v5
        with:
          python-version: '3.13'

      - name: Install Poetry
        uses: snok/install-poetry@v1
        with:
          version: 1.8.3

      - name: Cache venv
        uses: actions/cache@v4
        with:
          path: ~/.cache/pypoetry/virtualenvs
          key: ${{ runner.os }}-poetry-${{ hashFiles('**/poetry.lock') }}

      - name: Install deps (with dev)
        run: poetry install --no-interaction --with dev

      - name: Check formatting (ruff)
        run: poetry run ruff format --check .

      - name: Lint (ruff)
        run: poetry run ruff check .

  typecheck:
    name: mypy
    runs-on: ubuntu-latest
    needs: [lint]
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: '3.13'
      - uses: snok/install-poetry@v1
        with:
          version: 1.8.3
      - uses: actions/cache@v4
        with:
          path: ~/.cache/pypoetry/virtualenvs
          key: ${{ runner.os }}-poetry-${{ hashFiles('**/poetry.lock') }}
      - run: poetry install --no-interaction --with dev
      - run: poetry run mypy

  test:
    name: pytest (${{ matrix.python }})
    runs-on: ubuntu-latest
    needs: [typecheck]
    strategy:
      fail-fast: false
      matrix:
        python: ['3.11', '3.12', '3.13']
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python }}
          cache: 'pip'
      - uses: snok/install-poetry@v1
        with:
          version: 1.8.3
      - uses: actions/cache@v4
        with:
          path: ~/.cache/pypoetry/virtualenvs
          key: ${{ runner.os }}-${{ matrix.python }}-poetry-${{ hashFiles('**/poetry.lock') }}
      - run: poetry install --no-interaction --with dev
      - run: poetry run pytest -q
